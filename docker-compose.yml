version: '3'
services:
  postgres:
    image: postgres:9.6
    container_name: postgres
    networks:
      - devnet
    volumes:
      - psqldata_gear:/var/lib/postgresql/data
      - ./scripts/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql:ro
      - ./scripts/postgres_always.sh:/postgres_always.sh:ro
      - ./scripts/postgres_run.sh:/usr/local/bin/postgres_run.sh:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "psql -U fence_user -d fence_db -c 'SELECT 1;'"]
      interval: 60s
      timeout: 5s
      retries: 3
    command: postgres_run.sh
    environment:
      - POSTGRES_PASSWORD=postgres
  fence-service:
    image: "quay.io/pcdc/fence:1.0.1"
    command: bash /var/www/fence/fence_setup.sh
    container_name: fence-service
    networks:
      - devnet
    volumes:
      - ./Secrets/fence-config.yaml:/var/www/fence/fence-config.yaml
      - ./Secrets/user.yaml:/var/www/fence/user.yaml
      - ./Secrets/TLS/service.crt:/usr/local/share/ca-certificates/cdis-ca.crt
      - ./Secrets/fenceJwtKeys:/fence/keys
      - ./scripts/fence_setup.sh:/var/www/fence/fence_setup.sh
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/_status"]
      interval: 60s
      timeout: 5s
      retries: 3
    environment:
      - PYTHONPATH=/var/www/fence
      - GEN3_DEBUG=True
      - DD_ENABLED=False
    depends_on:
      - postgres
      - arborist-service
  arborist-service:
    image: "quay.io/cdis/arborist:2021.11"
    container_name: arborist-service
    entrypoint: bash /go/src/github.com/uc-cdis/arborist/arborist_setup.sh
    networks:
      - devnet
    volumes:
      - ./scripts/arborist_setup.sh:/go/src/github.com/uc-cdis/arborist/arborist_setup.sh
    environment:
      - JWKS_ENDPOINT=http://fence-service/.well-known/jwks
      - PGDATABASE=arborist_db
      - PGUSER=arborist_user
      - PGPASSWORD=arborist_pass
      - PGHOST=postgres
      - PGPORT=5432
      - PGSSLMODE=disable
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health"]
      interval: 60s
      timeout: 5s
      retries: 10
    depends_on:
      - postgres
  gearbox-service:
    image: "quay.io/pcdc/gearbox_be:0.2.0"
    container_name: gearbox-service
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_USER=gearbox_user
      - DB_PASSWORD=gearbox_pass
      - DB_DATABASE=gearbox
      - DB_PORT=5432
      - ALLOWED_ISSUERS=http://fence-service/,https://localhost/user
      - USER_API=http://fence-service/
      - FORCE_ISSUER=True
    command: >
      sh -c "/env/bin/alembic upgrade head && /env/bin/uvicorn --host 0.0.0.0 --port 80 gearbox.asgi:app --reload"
    networks:
      - devnet
  portal-service:
    image: "quay.io/pcdc/gearbox_fe:0.2.0"
    container_name: portal-service
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    command: ["/bin/bash", "./dockerStart.sh"] 
    networks: 
      - devnet
    # environment:
    #   - NODE_ENV=dev
    #   #- MOCK_STORE=true
    #   - APP=gitops
    #   - GDC_SUBPATH=http://revproxy-service/api/v0/submission/
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost"]
    #   interval: 60s
    #   timeout: 5s
    #   retries: 10
    depends_on:
      - postgres
      - gearbox-service
  revproxy-service:
    image: "quay.io/cdis/nginx:2021.11"
    container_name: revproxy-service
    networks:
      - devnet
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./Secrets/TLS/service.crt:/etc/nginx/ssl/nginx.crt
      - ./Secrets/TLS/service.key:/etc/nginx/ssl/nginx.key
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/_status"]
      interval: 60s
      timeout: 5s
      retries: 3
    depends_on:
      - arborist-service
      - fence-service
      - portal-service
      - gearbox-service

networks:
  devnet:
volumes:
  psqldata_gear: